local ToggleTrail = {
  Identifier = "os.artemis.ToggleTrail",
  Name = "Alternar rastros de Artemis (auto)",
  Command = [[
    local node
    if is_declared("args") then
      node = args.Node
    else
      node = openspace.navigation.getNavigationState().Anchor
    end

    if node ~= "ArtemisModel" then
      return
    end

    local earthTrail = "ArtemisEarthTrail"
    local moonTrail = "ArtemisMoonTrail"

    local visibility
    if is_declared("args") then
      if args.Transition == "Approaching" then
        visibility = false
      elseif args.Transition == "Exiting" then
        visibility = true
      else
        return
      end
    else
      visibility = not (
        (openspace.propertyValue("Scene." .. earthTrail .. ".Renderable.Fade") == 1) or
        (openspace.propertyValue("Scene." .. moonTrail .. ".Renderable.Fade") == 1)
      )
    end

    if visibility then
      openspace.fadeIn("Scene." .. earthTrail .. ".Renderable")
      openspace.fadeIn("Scene." .. moonTrail .. ".Renderable")
    else
      openspace.fadeOut("Scene." .. earthTrail .. ".Renderable")
      openspace.fadeOut("Scene." .. moonTrail .. ".Renderable")
    end

     ]],
  Documentation = [[Alterna la visibilidad de los rastros de Artemis con un
    evento de acercamiento/salida. Esta acción toma argumentos opcionales para 1) determinar qué
    nodo está actualmente enfocado y solo ocultar los rastros de Artemis si está enfocado (como el
    'Node') y 2) la dirección de la transición (como 'Approaching' o 'Exiting')]],
  GuiPath = "/Artemis/Eventos",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.action.registerAction(ToggleTrail)

  openspace.event.registerEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Exiting" }
  )
  openspace.event.registerEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Approaching" }
  )
end)

asset.onDeinitialize(function()
  openspace.event.unregisterEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Exiting" }
  )
  openspace.event.unregisterEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Approaching" }
  )

  openspace.action.removeAction(ToggleTrail)
end)

asset.export("ToggleTrail", ToggleTrail.Identifier)
