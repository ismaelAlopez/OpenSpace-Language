local ToggleTrail = {
  Identifier = "os.jwst.ToggleTrail",
  Name = "Activar o desactivar el rastro del JWST (automatico)",
  Command = [[
    local node
    if is_declared("args") then
      node = args.Node
    else
      node = openspace.navigation.getNavigationState().Anchor
    end

    if node ~= "JWSTModel" then
      return
    end


    local launchTrail = "JWSTTrailLaunch"
    local cruiseTrail = "JWSTTrailCruise"
    local coRevOrbitTrail = "JWSTTrailCoRevOrbit"

    local visibility
    if is_declared("args") then
      if args.Transition == "Approaching" then
        visibility = false
      elseif args.Transition == "Exiting" then
        visibility = true
      else
        return
      end
    else
      visibility = not (
        openspace.propertyValue("Scene." .. launchTrail .. ".Renderable.Enabled") or
        openspace.propertyValue("Scene." .. cruiseTrail .. ".Renderable.Enabled") or
        openspace.propertyValue("Scene." .. coRevOrbitTrail .. ".Renderable.Enabled")
      )
    end

    openspace.setPropertyValueSingle(
      "Scene." .. launchTrail .. ".Renderable.Enabled",
      visibility
    )
    openspace.setPropertyValueSingle(
      "Scene." .. cruiseTrail .. ".Renderable.Enabled",
      visibility
    )
    openspace.setPropertyValueSingle(
      "Scene." .. coRevOrbitTrail .. ".Renderable.Enabled",
      visibility
    )
  ]],
  Documentation = [[Activa o desactiva la visibilidad del rastro del JWST con un
    evento de acercamiento/salida. Esta acción toma argumentos opcionales para 1) determinar qué
    nodo está actualmente enfocado y solo ocultar el rastro del JWST si está enfocado (como el
    'Node') y 2) la dirección de la transición (como 'Approaching' o 'Exiting')]],
  GuiPath = "/JWST/Eventos",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.action.registerAction(ToggleTrail)

  openspace.event.registerEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Exiting" }
  )
  openspace.event.registerEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Approaching" }
  )
end)

asset.onDeinitialize(function()
  openspace.event.unregisterEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Exiting" }
  )
  openspace.event.unregisterEventAction(
    "CameraFocusTransition",
    ToggleTrail.Identifier,
    { Transition = "Approaching" }
  )

  openspace.action.removeAction(ToggleTrail)
end)

asset.export("ToggleTrail", ToggleTrail.Identifier)
