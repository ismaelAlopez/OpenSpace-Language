local globe = asset.require("../../earth")

local Name = "CarbonTracker: Escala Fija"
local Identifier = "noaa-sos-atmosphere-carbontracker_2000_2100-fixed_scale"
local Description = [["NOAA fomenta la ciencia que agrega beneficios a la sociedad y al
medio ambiente. CarbonTracker hace ambas cosas." dijo el vicealmirante retirado de la Marina Conrad
Lautenbacher, Ph.D., ex subsecretario de comercio para océanos y atmósfera y administrador de NOAA.
CarbonTracker es un sistema para rastrear la absorción y liberación de dióxido de carbono en
la superficie de la Tierra a lo largo del tiempo. Fue desarrollado por el grupo de Gases de Efecto Invernadero del Ciclo del Carbono en el Laboratorio de Investigación del Sistema Terrestre de NOAA. Como herramienta científica,
CarbonTracker ha ayudado a mejorar la comprensión de la absorción y liberación de carbono de la
tierra y los océanos, y cómo esas fuentes y sumideros están respondiendo al cambio climático,
niveles crecientes de CO2 atmosférico (el efecto de fertilización del CO2) y la gestión humana
de la tierra y los océanos. CarbonTracker se basa en el monitoreo a largo plazo del CO2 atmosférico
realizado por la División de Monitoreo Global de NOAA y socios internacionales]]
local URL = "https://sos.noaa.gov/catalog/datasets/carbon-tracker-fixed-scale/"

local syncedDirectory = asset.resource({
  Name = Name,
  Type = "HttpSynchronization",
  Identifier = Identifier,
  Version = 1
})

local fieldDestination = syncedDirectory .. "field"
local obsDestination = syncedDirectory .. "obs"
local colorbarDestination = syncedDirectory .. "colorbar"

local LayerField = {
  Identifier = Identifier .. "-field",
  Name = Name .. " (Campo)",
  Type = "TemporalTileProvider",
  ZIndex = 100,
  Mode = "Folder",
  Folder = {
    Folder = fieldDestination,
    Format = "co2wx_%Y%m%d.png"
  },
  Description = Description
}

local LayerObs = {
  Identifier = Identifier .. "-obs",
  Name = Name .. " (Observado)",
  Type = "TemporalTileProvider",
  ZIndex = 100,
  Mode = "Folder",
  Folder = {
    Folder = obsDestination,
    Format = "co2wx_%Y%m%d.obs.png"
  },
  Description = Description
}

local Colorbar = {
  Identifier = Identifier,
  Name = Name,
  Type = "ScreenSpaceImageLocal",
  TexturePath = colorbarDestination .. "/" .. "co2wx_20000101.cpt.png",
  FaceCamera = false,
  BackgroundColor = { 1.0, 1.0, 1.0, 1.0 },
  CartesianPosition = { 0.0, -0.5, -2.0 }
}

asset.onInitialize(function()
  if not openspace.directoryExists(fieldDestination) then
    openspace.printInfo("Extrayendo " .. Name)
    openspace.unzipFile(syncedDirectory .. "field-1.zip", fieldDestination, true)
    openspace.unzipFile(syncedDirectory .. "field-2.zip", fieldDestination, true)
    openspace.unzipFile(syncedDirectory .. "field-3.zip", fieldDestination, true)
  end

  if not openspace.directoryExists(obsDestination) then
    openspace.printInfo("Extrayendo " .. Name .. " Observado")
    openspace.unzipFile(syncedDirectory .. "obs.zip", obsDestination, true)
  end

  if not openspace.directoryExists(colorbarDestination) then
    openspace.printInfo("Extrayendo " .. Name .. " Barra de Color")
    openspace.unzipFile(syncedDirectory .. "colorbar.zip", colorbarDestination, true)
  end

  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", LayerField)
  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", LayerObs)
  openspace.addScreenSpaceRenderable(Colorbar)
end)

asset.onDeinitialize(function()
  openspace.removeScreenSpaceRenderable(Colorbar)
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", LayerObs)
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", LayerField)
end)

asset.export(LayerField)
asset.export(LayerObs)
asset.export(Colorbar)

asset.meta = {
  Name = Name,
  Description = Description .. "Datos proporcionados por la Administración Nacional Oceánica y Atmosférica",
  Author = "Administración Nacional Oceánica y Atmosférica",
  URL = URL,
  License = "https://sos.noaa.gov/copyright/"
}
