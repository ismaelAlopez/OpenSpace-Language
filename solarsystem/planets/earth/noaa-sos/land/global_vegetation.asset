local globe = asset.require("../../earth")



local Name = "Vegetacion: Cambios estacionales - Abr 2012 - Abr 2013"
local Identifier = "noaa-sos-land-global_vegetation"
local Description = [[Aunque el 75% del planeta es un océano azul relativamente inmutable,
el 25% restante de la superficie terrestre es un dinámico verde. Los datos del satélite
Suomi NPP de la NASA/NOAA pueden mostrar estas sutiles diferencias en verdor utilizando
el instrumento Visible-Infrared Imager/Radiometer Suite (VIIRS) a bordo del satélite.
Este conjunto de datos destaca nuestro planeta en constante cambio, utilizando un índice
de vegetación altamente detallado desarrollado por científicos de la NOAA.]]
local URL = "https://sos.noaa.gov/catalog/datasets/vegetation-seasonal-changes-apr-2012-apr-2013/"


local syncedDirectory = asset.resource({
  Name = Name,
  Type = "HttpSynchronization",
  Identifier = Identifier,
  Version = 1,
  UnzipFiles = true
})


local imagesDestination = syncedDirectory .. "4096"
local colorbarDestination = syncedDirectory .. "colorbar/"

local Background1Layer = {
  Identifier = Identifier .. "-background-14a",
  Name = Name .. " (Fondo Semana 14a)",
  Enabled = asset.enabled,
  ZIndex = 100,
  FilePath = syncedDirectory .. "2012_week14a.png",
  Description = Description
}

local Background2Layer = {
  Identifier = Identifier .. "-background-14",
  Name = Name .. " (Fondo Semana 14)",
  Enabled = asset.enabled,
  ZIndex = 100,
  FilePath = syncedDirectory .. "2012week14.png",
  Description = Description
}

local Layer = {
  Identifier = Identifier,
  Name = Name,
  Enabled = asset.enabled,
  ZIndex = 100,
  Type = "TemporalTileProvider",
  Mode = "Folder",
  Folder = {
    Folder = imagesDestination,
    -- See https://en.cppreference.com/w/cpp/io/manip/get_time for an explanation of the
    -- time formatting string
    Format = "%Yweek%U.png"
  },
  Description = Description
}

local Colorbar = {
  Identifier = Identifier,
  Name = Name,
  Enabled = asset.enabled,
  Type = "ScreenSpaceImageLocal",
  -- @TODO:  We need a temporal provider for ScreenSpaceImages to handle this
  TexturePath = colorbarDestination .. "NDVIColor00001.png",
  FaceCamera = false,
  CartesianPosition = { 0.0, -0.5, -2.0 }
}


asset.onInitialize(function()
  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", Background1Layer)
  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", Background2Layer)
  openspace.globebrowsing.addLayer(globe.Earth.Identifier, "ColorLayers", Layer)
  openspace.addScreenSpaceRenderable(Colorbar)
end)

asset.onDeinitialize(function()
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", Layer)
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", Background2Layer)
  openspace.globebrowsing.deleteLayer(globe.Earth.Identifier, "ColorLayers", Background1Layer)
  openspace.removeScreenSpaceRenderable(Colorbar)
end)

asset.export(Layer)
asset.export(Background2Layer)
asset.export(Background1Layer)
asset.export(Colorbar)



asset.meta = {
  Name = Name,
  Description = Description .. "Datos proporcionados por la Administración Nacional Oceánica y Atmosférica",
  Author = "Administración Nacional Oceánica y Atmosférica",
  URL = URL,
  License = "https://sos.noaa.gov/copyright/"
}
