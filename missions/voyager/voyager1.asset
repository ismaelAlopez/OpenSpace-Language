local sunTransforms = asset.require("scene/solarsystem/sun/transforms")
local coreKernels = asset.require("spice/core")



local models = asset.resource({
  Name = "Modelo de Voyager",
  Type = "HttpSynchronization",
  Identifier = "voyager_model",
  Version = 2
})

local kernels = asset.resource({
  Name = "Kernels de Voyager 1",
  Type = "HttpSynchronization",
  Identifier = "voyager1_spice",
  Version = 2
})


local Kernels = {
  kernels .. "vg1_v02.tf",
  kernels .. "vg100019.tsc",
  kernels .. "Voyager_1.a54206u_V0.2_merged.bsp",
  kernels .. "voyager_1.ST+1991_a54418u.merged.bsp",
  kernels .. "vgr1_jup230.bsp",
  kernels .. "vgr1_sat337.bsp",
  kernels .. "vgr1.x2100.bsp",
  kernels .. "vgr1_super.bc",
  kernels .. "vgr1_super_v2.bc",
}

local RotationMatrix = {
  -1, 0, 0, 0,
  0, 0, -1, 0,
  0, -1, 0, 0,
  0, 0, 0, 1
}

local Voyager1 = {
  Identifier = "Voyager_1",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Transform = {
    Translation = {
      Type = "SpiceTranslation",
      Target = "VOYAGER 1",
      Observer = "SSB"
    },
    Rotation = {
      Type = "SpiceRotation",
      SourceFrame = "VG1_SC_BUS",
      DestinationFrame = coreKernels.Frame.Galactic,
      TimeFrame = {
        Type = "TimeFrameInterval",
        Start = "1977-SEP-05 14:10:11.786",
        End = "2027-DEC-27"
      }
    }
  },
  Renderable = {
    Type = "RenderableModel",
    Enabled = asset.enabled,
    GeometryFile = models .. "Voyager.glb",
    ModelTransform = RotationMatrix,
    LightSources = {
      sunTransforms.LightSource,
      {
        Identifier = "Camera",
        Type = "CameraLightSource",
        Intensity = 0.5
      }
    }
  },
  GUI = {
    Name = "Voyager 1",
    Path = "/Sistema Solar/Misiones/Voyager 1"
  }
}

local VoyagerTrailCruiseEarthJupiter = {
  Identifier = "Voyager_1_Trail_Cruise_Earth_Jupiter",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTrailTrajectory",
    Enabled = asset.enabled,
    Translation = {
      Type = "SpiceTranslation",
      Target = "VOYAGER 1",
      Observer = coreKernels.ID.SolarSystemBarycenter
    },
    Color = { 0.70, 0.50, 0.20 },
    StartTime = "1977 SEP 05",
    EndTime = "1979 MAR 04",
    SampleInterval = openspace.time.duration("1977 SEP 05", "1979 MAR 04") /
                     openspace.time.secondsPerYear() * 2
  },
  Tag = { "voyager1_trail" },
  GUI = {
    Name = "Rastro de Voyager 1 Crucero Tierra-Júpiter",
    Path = "/Sistema Solar/Misiones/Voyager 1"
  }
}

local VoyagerTrailEncounterJupiter = {
  Identifier = "Voyager_1_Trail_Encounter_Jupiter",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTrailTrajectory",
    Enabled = asset.enabled,
    Translation = {
      Type = "SpiceTranslation",
      Target = "VOYAGER 1",
      Observer = coreKernels.ID.SolarSystemBarycenter
    },
    Color = { 0.70, 0.50, 0.20 },
    EnableFade = false,
    StartTime = "1979 MAR 03 23:24:00",
    EndTime = "1979 MAR 09",
    SampleInterval = 100
  },
  Tag = { "voyager1_trail" },
  GUI = {
    Name = "Rastro de Voyager 1 Encuentro con Júpiter",
    Path = "/Sistema Solar/Misiones/Voyager 1"
  }
}

local VoyagerTrailCruiseJupiterSaturn = {
  Identifier = "Voyager_1_Trail_Cruise_Jupiter_Saturn",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTrailTrajectory",
    Enabled = asset.enabled,
    Translation = {
      Type = "SpiceTranslation",
      Target = "VOYAGER 1",
      Observer = coreKernels.ID.SolarSystemBarycenter
    },
    EnableFade = false,
    Color = { 0.70, 0.50, 0.20 },
    StartTime = "1979 MAR 09",
    EndTime = "1980 NOV 11",
    SampleInterval = openspace.time.duration("1979 MAR 09", "1980 NOV 11") /
                     openspace.time.secondsPerYear() * 2
  },
  Tag = { "voyager1_trail" },
  GUI = {
    Name = "Rastro de Voyager 1 Crucero Júpiter-Saturno",
    Path = "/Sistema Solar/Misiones/Voyager 1"
  }
}

local VoyagerTrailEncounterSaturn = {
  Identifier = "Voyager_1_Trail_Encounter_Saturn",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTrailTrajectory",
    Enabled = asset.enabled,
    Translation = {
      Type = "SpiceTranslation",
      Target = "VOYAGER 1",
      Observer = coreKernels.ID.SolarSystemBarycenter
    },
    EnableFade = false,
    Color = { 0.70, 0.50, 0.20 },
    StartTime = "1980 NOV 10 23:08:30",
    EndTime = "1980 NOV 16",
    SampleInterval = 100
  },
  Tag = { "voyager1_trail" },
  GUI = {
    Name = "Rastro de Voyager 1 Encuentro con Saturno",
    Path = "/Sistema Solar/Misiones/Voyager 1"
  }
}

local VoyagerTrailCruiseSaturnInf = {
  Identifier = "Voyager_1_Trail_Cruise_Saturn_Inf",
  Parent = sunTransforms.SolarSystemBarycenter.Identifier,
  Renderable = {
    Type = "RenderableTrailTrajectory",
    Enabled = asset.enabled,
    Translation = {
      Type = "SpiceTranslation",
      Target = "VOYAGER 1",
      Observer = coreKernels.ID.SolarSystemBarycenter
    },
    EnableFade = false,
    Color = { 0.70, 0.50, 0.20 },
    StartTime = "1980 NOV 16",
    EndTime = "2100 JAN 01",
    SampleInterval = openspace.time.duration("1980 NOV 16", "2100 JAN 01") /
                     openspace.time.secondsPerYear() * 2

  },
  Tag = { "voyager1_trail" },
  GUI = {
    Name = "Rastro de Voyager 1 Crucero Saturno-Infinito",
    Path = "/Sistema Solar/Misiones/Voyager 1"
  }
}


local FocusVoyager1 = {
  Identifier = "os.voyager.FocusVoyager1",
  Name = "Enfocar en Voyager 1",
  Command = [[
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.RetargetAnchor", nil)
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.Anchor", "Voyager_1")
    openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.Aim", "")
  ]],
  Documentation = "Establecer el enfoque de la cámara en Voyager 1",
  GuiPath = "/Misiones/Voyager",
  IsLocal = false
}


asset.onInitialize(function()
  openspace.spice.loadKernel(Kernels)

  openspace.addSceneGraphNode(Voyager1)
  openspace.addSceneGraphNode(VoyagerTrailCruiseEarthJupiter)
  openspace.addSceneGraphNode(VoyagerTrailEncounterJupiter)
  openspace.addSceneGraphNode(VoyagerTrailCruiseJupiterSaturn)
  openspace.addSceneGraphNode(VoyagerTrailEncounterSaturn)
  openspace.addSceneGraphNode(VoyagerTrailCruiseSaturnInf)

  openspace.action.registerAction(FocusVoyager1)
end)

asset.onDeinitialize(function()
  openspace.action.removeAction(FocusVoyager1)

  openspace.removeSceneGraphNode(VoyagerTrailCruiseSaturnInf)
  openspace.removeSceneGraphNode(VoyagerTrailEncounterSaturn)
  openspace.removeSceneGraphNode(VoyagerTrailCruiseJupiterSaturn)
  openspace.removeSceneGraphNode(VoyagerTrailEncounterJupiter)
  openspace.removeSceneGraphNode(VoyagerTrailCruiseEarthJupiter)
  openspace.removeSceneGraphNode(Voyager1)

  openspace.spice.unloadKernel(Kernels)
end)

asset.export(Voyager1)
asset.export(VoyagerTrailCruiseEarthJupiter)
asset.export(VoyagerTrailEncounterJupiter)
asset.export(VoyagerTrailCruiseJupiterSaturn)
asset.export(VoyagerTrailEncounterSaturn)
asset.export(VoyagerTrailCruiseSaturnInf)

asset.meta = {
  Name = "Modelo y Rastros de Voyager 1",
  Description = [[
    Modelo y rastros de Voyager 1 desde el 5 de septiembre de 1977 hasta el 1 de enero de 2100. 
    Crédito del modelo: NASA Visualization Technology Applications And Development (VTAD)
  ]],
  Author = "Equipo de OpenSpace",
  URL = "http://openspaceproject.com",
  License = "Licencia MIT"
}
